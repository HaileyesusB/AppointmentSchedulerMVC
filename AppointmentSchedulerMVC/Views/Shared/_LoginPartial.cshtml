@inject Microsoft.AspNetCore.Identity.SignInManager<AppointmentSchedulerMVC.Models.ApplicationUser> signInManager
@*@inject Microsoft.AspNetCore.Identity.SignInManager<Microsoft.AspNetCore.Identity.IdentityUser> signInManager*@

@if(signInManager.IsSignedIn(User))
{
    <form id="logoutForm" method="post" asp-action="LogOff" asp-controller="Account">
      <ul class="nav navbar-nav">
            <li class="text-white nav-link">Hello, @User.Identity.Name</li>
            <li><a class="text-white nav-link" href="javascript:document.getElementById('logoutForm').submit()">Log Off</a></li>
      </ul>
   </form>
}  
else
{  
  <ul class="nav navbar-nav">
      <li class="nav-item">
            @*<li>@Html.ActionLink("Sign Up", "Register", "Account", routeValues:null, htmlAttributes:new {id = "registerLink"})</li>*@
            <a class="nav-link text-white" id="registerLink" asp-controller="Account" asp-action="Register">Register</a>
      </li>

        <li class="nav-item">
             @*<li>@Html.ActionLink("Sign In", "LogIn", "Account", routeValues:null, htmlAttributes:new {id = "logInLink"})</li>*@
            <a class="nav-link text-white" id="registerLink" asp-controller="Account" asp-action="LogIn">LogIn</a>
        </li>
        
       

  </ul>
}